{"ast":null,"code":"var _jsxFileName = \"/Users/lewagon/Documents/React Course/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2022');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onFilterChangeHandler: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this)\n      //el && devuelve el segundo valor si el primero es true, si es false devuelve el primero\n      , filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"VsY+CdjhJzXvjVXvetgq5EU6jt4=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["/Users/lewagon/Documents/React Course/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState('2022');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = <p>No expenses found.</p>;\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} onFilterChangeHandler={filterChangeHandler} />\n        {filteredExpenses.length === 0 && <p>No expenses found.</p>\n        //el && devuelve el segundo valor si el primero es true, si es false devuelve el primero\n        }\n        {filteredExpenses.length > 0 &&\n        filteredExpenses.map((expense) => (\n          <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n        ))};\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAAC;AAE9B,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMQ,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,YAAY;EAC/D,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAG;IAAA,UAAG;EAAkB;IAAA;IAAA;IAAA;EAAA,QAAI;EAC/C,IAAIP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAE;IAC/BD,eAAe,GAAGP,gBAAgB,CAACS,GAAG,CAAEN,OAAO,iBAC7C,QAAC,WAAW;MAAkB,KAAK,EAAEA,OAAO,CAACO,KAAM;MAAC,MAAM,EAAEP,OAAO,CAACQ,MAAO;MAAC,IAAI,EAAER,OAAO,CAACC;IAAK,GAA7ED,OAAO,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA,QAC7B,CAAC;EACJ;EAEA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,cAAc;QAAC,QAAQ,EAAEhB,YAAa;QAAC,qBAAqB,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAG,EACrFE,gBAAgB,CAACQ,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAkB;QAAA;QAAA;QAAA;MAAA;MACvD;MAAA,EAECR,gBAAgB,CAACQ,MAAM,GAAG,CAAC,IAC5BR,gBAAgB,CAACS,GAAG,CAAEN,OAAO,iBAC3B,QAAC,WAAW;QAAkB,KAAK,EAAEA,OAAO,CAACO,KAAM;QAAC,MAAM,EAAEP,OAAO,CAACQ,MAAO;QAAC,IAAI,EAAER,OAAO,CAACC;MAAK,GAA7ED,OAAO,CAACS,EAAE;QAAA;QAAA;QAAA;MAAA,QAC7B,CAAC,EAAC,GACL;IAAA;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhCQlB,QAAQ;AAAA,KAARA,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}